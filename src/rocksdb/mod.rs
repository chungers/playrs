use graph::Node;
#[allow(unused_imports)]
use tracing::{debug, error, info, trace, warn};

pub mod command;
mod counter;
mod db;
mod edge;
mod error;
mod index;
mod node;

#[path = "rocksdb.graph.v1.rs"] // generated by protoc
mod graph;

mod server;

#[derive(Debug, Clone, PartialEq)]
pub struct All;

use crate::rocksdb::graph::Edge;
use crate::rocksdb::index::Indexes; // use here to access to cf_name() method on index.

impl db::IndexBuilder for All {
    fn cf_names(&self) -> Vec<String> {
        let mut cfs = Vec::<String>::new();
        for i in Node::indexes().iter() {
            cfs.push(i.cf_name().to_string());
        }
        for i in Edge::indexes().iter() {
            cfs.push(i.cf_name().to_string());
        }
        cfs
    }
}
